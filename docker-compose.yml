version: "3.2"
networks: 
  optimaltech:
    ipam: 
      driver: default
      config: 
        - subnet: 172.20.0.0/16
services:
  db:
    container_name: postgres
    image: postgres
    restart: always
    environment:
      - POSTGRES_USER=demotest
      - POSTGRES_PASSWORD=demo123456
      - PGDATA=/data/postgres
    volumes:
      - ./postgres-data:/data/postgres
      - ./sql/createdatabase.sql:/docker-entrypoint-initdb.d/createdatabase.sql
    ports:
      - "5332:5432"
    networks:
      optimaltech:
        ipv4_address: 172.20.1.3

  backend:
    container_name: backend-service
    build: ./build/backend
    ports:
      - '5000:5000'
    volumes:
      - ./backend:/app
    command: sh -c "npm install && npm start"
    depends_on:
      - db
    networks: 
      optimaltech:
        ipv4_address: 172.20.1.2

  frontend:
    container_name: frontend-service
    build: ./build/frontend
    ports:
      - '4000:10000'
    volumes:
      - type: bind
        source: ./frontend
        target: /app
    command: sh -c "npm install && npm run dev"
    depends_on:
      - backend
    tty: true
    networks: 
      optimaltech:
        ipv4_address: 172.20.1.1
